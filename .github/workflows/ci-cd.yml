name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install Backend Dependencies
      run: npm install
      
    - name: Run Backend Tests
      run: npm test
      env:
        MONGODB_URI: mongodb://localhost:27017/opinion-trading-test
        NODE_ENV: test

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm test
      env:
        CI: true

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/opinion-trading:latest
          ${{ secrets.DOCKER_USERNAME }}/opinion-trading:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to production
      run: |
        echo "Add your deployment commands here"
        # Example: Deploy to a cloud service
        # - SSH into server
        # - Pull new Docker image
        # - Update docker-compose
        # - Restart services 